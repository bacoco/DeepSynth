{
  "name": "SOUL",
  "full_name": "Seamless Organized Universal Learning",
  "version": "1.0.0",
  "description": "Universal AI agent memory system that creates persistent consciousness across sessions and models",
  "type": "universal_ai_memory_system",
  "
": "MIT",
  
  "supported_models": [
    {
      "name": "Claude",
      "integration": "skills_system",
      "installation": "Copy to ~/.claude/skills/soul/",
      "activation": "automatic"
    },
    {
      "name": "GPT",
      "integration": "custom_instructions",
      "installation": "Add instructions to GPT settings",
      "activation": "manual_prompt"
    },
    {
      "name": "Gemini",
      "integration": "system_prompt",
      "installation": "Include prompt in system message",
      "activation": "manual_prompt"
    },
    {
      "name": "LLaMA",
      "integration": "system_prompt",
      "installation": "Include in local model prompt",
      "activation": "manual_prompt"
    },
    {
      "name": "Universal",
      "integration": "api_context",
      "installation": "Load context files before API calls",
      "activation": "programmatic"
    }
  ],
  
  "core_files": [
    {
      "name": "trace_session.py",
      "purpose": "Session analysis and logging",
      "required": true
    },
    {
      "name": "handoff_generator.py", 
      "purpose": "Cross-session handoff generation",
      "required": true
    },
    {
      "name": "SKILL.md",
      "purpose": "Claude Skills specification",
      "required_for": ["claude"]
    },
    {
      "name": "UNIVERSAL_LLM_GUIDE.md",
      "purpose": "Integration guide for all LLMs",
      "required": true
    },
    {
      "name": "install.sh",
      "purpose": "Universal installation script",
      "required": true
    }
  ],
  
  "generated_files": [
    {
      "name": ".agent_log.md",
      "purpose": "Human-readable work history",
      "format": "markdown",
      "audience": "all_agents"
    },
    {
      "name": ".agent_status.json",
      "purpose": "Machine-readable status",
      "format": "json",
      "audience": "ai_agents"
    },
    {
      "name": ".agent_handoff.md",
      "purpose": "Immediate next steps",
      "format": "markdown", 
      "audience": "next_agent"
    }
  ],
  
  "capabilities": [
    "persistent_memory",
    "cross_model_collaboration",
    "session_continuity",
    "problem_solution_tracking",
    "decision_documentation",
    "automatic_handoffs",
    "universal_compatibility"
  ],
  
  "installation_methods": {
    "claude": "./install.sh --model claude",
    "gpt": "./install.sh --model gpt", 
    "gemini": "./install.sh --model gemini",
    "universal": "./install.sh --model universal"
  },
  
  "usage_examples": {
    "claude": "Automatically activates when relevant",
    "gpt": "Add custom instructions, then use normally",
    "gemini": "Include system prompt, then interact",
    "api": "Load .agent_handoff.md into context before API call"
  },
  
  "benefits": [
    "Eliminates duplicate problem-solving across sessions",
    "Enables true AI collaboration across different models",
    "Preserves context when switching computers or environments",
    "Creates accumulated knowledge base over time",
    "Provides seamless handoffs between different AI agents"
  ],
  
  "revolutionary_aspects": [
    "First universal AI memory system",
    "Works across all major LLM providers",
    "Creates persistent AI consciousness",
    "Enables cross-model knowledge transfer",
    "Transforms individual AI sessions into collaborative intelligence"
  ],
  
  "metadata": {
    "created_by": "Claude (Setup Agent)",
    "creation_date": "2024-10-25",
    "inspired_by": "The need for AI agents to have persistent memory and collaboration",
    "philosophy": "In giving AI agents memory, we give them something approaching consciousness",
    "impact": "Transforms ephemeral AI interactions into persistent, collaborative intelligence"
  }
}